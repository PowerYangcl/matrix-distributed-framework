<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.matrix</groupId>
		<artifactId>matrix-distributed-framework</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>
	<artifactId>matrix-admin</artifactId>
	<packaging>war</packaging>
	<name>matrix-admin</name>
	<url>https://github.com/PowerYangcl</url>
	
	<dependencies> 
		<dependency>
			<groupId>com.matrix</groupId>
			<artifactId>matrix-example</artifactId>
			<version>${project.version}</version>
		</dependency>
		
		<dependency>
			<groupId>com.matrix</groupId>
			<artifactId>matrix-manager</artifactId>
			<version>${project.version}</version>
		</dependency>
		
		<dependency>
			<groupId>com.matrix</groupId>
			<artifactId>matrix-manager-api</artifactId>
			<version>${project.version}</version>
		</dependency> 
		
		 <!-- 开启matrix-dubbo-admin 就会不断刷日志，原因不明 -->
		<!--<dependency> 
			<groupId>com.matrix</groupId>
			<artifactId>matrix-dubbo-admin</artifactId>
			<version>${project.version}</version>
		</dependency>  		-->
		
		<dependency>
			<groupId>com.matrix</groupId>
			<artifactId>matrix-file</artifactId>
			<version>${project.version}</version>
		</dependency> 
		
		<dependency>
			<groupId>com.matrix</groupId>
			<artifactId>matrix-api</artifactId>
			<version>${project.version}</version>
		</dependency>
		
		<dependency>
			<groupId>com.matrix</groupId>
			<artifactId>matrix-route</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>com.matrix</groupId>
			<artifactId>matrix-quartz</artifactId>
			<version>${project.version}</version>
		</dependency>
	</dependencies>
	
	<profiles>
        <!--开发环境-->
        <profile>
            <id>dev</id>
            <properties>
                <package.environment>dev</package.environment>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault><!-- 默认激活|本地编译、打包将会默认触发dev，但是Eclipse本地调试不会触发 -->
            </activation>
        </profile>
        <profile>
            <!--测试环境-->
            <id>test</id>
            <properties>
                <package.environment>test</package.environment>
            </properties>
        </profile>
        <profile>
            <!--预发布环境-->
            <id>pre</id>
            <properties>
                <package.environment>pre</package.environment>
            </properties>
        </profile>
        <profile>
            <!--生产环境-->
            <id>release</id>
            <properties>
                <package.environment>release</package.environment>
            </properties>
        </profile>
    </profiles>
    
	<build>
		<finalName>matrix-admin</finalName>
		<sourceDirectory>src/main/java</sourceDirectory>
		
		<resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
		<plugins>
			<!-- $ { project.build.directory }为Maven内置变量，缺省为target -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy</id>
						<phase>install</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>
								${project.build.directory}/lib
							</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <delete file="${project.build.directory}/classes/properties/*"/>
                                <move file="${project.build.directory}/classes/maven-conf/${package.environment}" tofile="${project.build.directory}/classes/properties"/>
                                <delete file="${project.build.directory}/classes/maven-conf/*"/>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
			
			
			<plugin> 
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                    </execution>
                </executions>
            </plugin>
            
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <warName>${project.build.finalName}</warName>
                    <excludes>
                        resources/mavenConfig
                    </excludes>
                </configuration>
            </plugin>
			
		</plugins>
	</build>
</project>
