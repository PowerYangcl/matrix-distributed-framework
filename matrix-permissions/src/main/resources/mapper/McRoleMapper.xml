<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.matrix.dao.IMcRoleMapper">

	<!-- 基类字段映射 -->
	<resultMap id="BaseMap" type="com.matrix.base.BaseEntity"> 
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="create_user_id" property="createUserId" jdbcType="BIGINT" />
		<result column="create_user_name" property="createUserName" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="update_user_id" property="updateUserId" jdbcType="BIGINT" />
		<result column="update_user_name" property="updateUserName" jdbcType="VARCHAR" />
		<result column="delete_flag" property="deleteFlag" jdbcType="INTEGER" />
	</resultMap>
	
	<resultMap id="BaseResultMap" type="com.matrix.pojo.entity.McRole" extends="BaseMap">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="type" property="type" jdbcType="VARCHAR" />
		<result column="platform" property="platform" jdbcType="VARCHAR" />
		<result column="role_name" property="roleName" jdbcType="VARCHAR" />
		<result column="role_desc" property="roleDesc" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
	</resultMap>
	
	<select id="find" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
			*
		from 
			mc_role
		where 
			id = #{id , jdbcType=BIGINT}
		and
			delete_flag = 1 limit 1
	</select>
	
	<resultMap id="McRoleCacheMap" type="com.matrix.pojo.cache.McRoleCache"></resultMap>
	<select id="findRoleCache" resultMap="McRoleCacheMap" parameterType="java.lang.Long">  
		select 
			r.id as mcRoleId,	  
			r.type as type,
			r.platform as platform,
			r.role_name as roleName,
			r.role_desc as roleDesc,
			GROUP_CONCAT(rf.mc_sys_function_id order by rf.mc_sys_function_id asc) as ids
		from `mc_role_function` rf  left join `mc_role` r on r.id = rf.mc_role_id
		where 
			r.delete_flag = 1 and r.id = #{id , jdbcType=BIGINT}
		group by rf.mc_role_id
		order by r.id asc
	</select>
	
	<select id="findByType" resultMap="BaseResultMap" parameterType="com.matrix.pojo.entity.McRole">
		select
			*
		from 
			mc_role r
		where 
			r.delete_flag = 1 
			<if test="type != null">
				and r.type = #{type,jdbcType=VARCHAR}
			</if>
			<if test="platform != null">
				and r.platform = #{platform,jdbcType=VARCHAR}
			</if>
			<if test="roleName != null and roleName != ''  ">
				and r.role_name = #{roleName , jdbcType=VARCHAR}
			</if> 
	</select>
	
	<select id="findList" resultMap="BaseResultMap" parameterType="com.matrix.pojo.entity.McRole">
		select
			*
		from 
			mc_role
		where 
			   delete_flag = 1
			<if test="id != null">
				and  id = #{id , jdbcType=BIGINT} 
			</if>
			<if test="roleName != null">
				and role_name = #{roleName , jdbcType=VARCHAR}
			</if> 
	</select>
	
	<select id="findMcRoleDtoList" resultMap="McRoleCacheMap" >  
		select 
			r.id as mcRoleId,	  
			r.type as type,
			r.platform as platform,
			r.role_name as roleName,
			r.role_desc as roleDesc,
			GROUP_CONCAT(rf.mc_sys_function_id order by rf.mc_sys_function_id asc) as ids
		from `mc_role_function` rf  left join `mc_role` r on r.id = rf.mc_role_id
		where 
			r.delete_flag = 1
		group by rf.mc_role_id
		order by r.id asc
	</select>
	
	<resultMap id="queryPageViewMap" type="com.matrix.pojo.view.McRoleView" extends="BaseResultMap"></resultMap>
	<select id="queryPageView" parameterType="com.matrix.pojo.dto.McRoleDto" resultMap="queryPageViewMap">
		select 
			f.name as platformName,
			r.* 
		from 
			mc_role r left join mc_sys_function f on r.platform = f.platform
		<where>
			r.delete_flag = 1 and f.nav_type = 0
			<if test="type != null">
				and r.type = #{type,jdbcType=VARCHAR}
			</if>
			<if test="platform != null">
				and r.platform in (${platform})
			</if>
			<if test="roleName != null and roleName != ''  ">
				and r.role_name = #{roleName , jdbcType=VARCHAR}
			</if> 
		</where>
	</select>
	
	<!-- 系统角色列表数据 - Yangcl -->
	<select id="pageListByDto" parameterType="com.matrix.pojo.dto.McRoleDto" resultMap="queryPageViewMap">
		select 
			f.name as platformName,
			r.* 
		from 
			mc_role r left join mc_sys_function f on r.platform = f.platform
		where 
			r.delete_flag = 1 
		and
			f.nav_type = 0
			<if test="type != null  and type != '' ">
				and r.type = #{type,jdbcType=VARCHAR}
			</if>
			<if test="platform != null and platform != '' ">
				and r.platform = #{platform,jdbcType=VARCHAR}
			</if>
			<if test="roleName != null and roleName != ''  ">
				and r.role_name like  '%${roleName}%'
			</if>
			order by r.create_time desc
	</select>
	
	
	
	<delete id="deleteById" parameterType="java.lang.Long">
		delete from mc_role where id = #{id , jdbcType=BIGINT}
	</delete>
	
	<insert id="insertSelective" parameterType="com.matrix.pojo.entity.McRole" >
		insert into mc_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="platform != null">
				platform,
			</if>
			<if test="roleName != null">
				role_name,
			</if>
			<if test="roleDesc != null">
				role_desc,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="createUserId != null">
				create_user_id,
			</if>
			<if test="createUserName != null">
				create_user_name,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="updateUserId != null">
				update_user_id,
			</if>
			<if test="updateUserName != null">
				update_user_name,
			</if>
			<if test="deleteFlag != null">
				delete_flag,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="type != null">
				#{type , jdbcType=VARCHAR},
			</if>
			<if test="platform != null">
				#{platform,jdbcType=VARCHAR},
			</if>
			<if test="roleName != null">
				#{roleName,jdbcType=VARCHAR},
			</if>
			<if test="roleDesc != null">
				#{roleDesc,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime , jdbcType=TIMESTAMP},
			</if>
			<if test="createUserId != null">
				#{createUserId , jdbcType=BIGINT},
			</if>
			<if test="createUserName != null">
				#{createUserName , jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime , jdbcType=TIMESTAMP},
			</if>
			<if test="updateUserId != null">
				#{updateUserId , jdbcType=BIGINT},
			</if>
			<if test="updateUserName != null">
				#{updateUserName , jdbcType=VARCHAR},
			</if>
			<if test="deleteFlag != null">
				#{deleteFlag , jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	
	<insert id="insertGotEntityId" parameterType="com.matrix.pojo.entity.McRole"  useGeneratedKeys="true" keyProperty="id">
		insert into mc_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="platform != null">
				platform,
			</if>
			<if test="roleName != null">
				role_name,
			</if>
			<if test="roleDesc != null">
				role_desc,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="createUserId != null">
				create_user_id,
			</if>
			<if test="createUserName != null">
				create_user_name,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="updateUserId != null">
				update_user_id,
			</if>
			<if test="updateUserName != null">
				update_user_name,
			</if>
			<if test="deleteFlag != null">
				delete_flag,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="type != null">
				#{type , jdbcType=VARCHAR},
			</if>
			<if test="platform != null">
				#{platform,jdbcType=VARCHAR},
			</if>
			<if test="roleName != null">
				#{roleName,jdbcType=VARCHAR},
			</if>
			<if test="roleDesc != null">
				#{roleDesc,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime , jdbcType=TIMESTAMP},
			</if>
			<if test="createUserId != null">
				#{createUserId , jdbcType=BIGINT},
			</if>
			<if test="createUserName != null">
				#{createUserName , jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime , jdbcType=TIMESTAMP},
			</if>
			<if test="updateUserId != null">
				#{updateUserId , jdbcType=BIGINT},
			</if>
			<if test="updateUserName != null">
				#{updateUserName , jdbcType=VARCHAR},
			</if>
			<if test="deleteFlag != null">
				#{deleteFlag , jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	
	<update id="updateSelective" parameterType="com.matrix.pojo.entity.McRole">
		update mc_role
		<set>
			<if test="type != null">
				type = #{type,jdbcType=VARCHAR},
			</if>
			<if test="platform != null">
				platform = #{platform,jdbcType=VARCHAR},
			</if>
			<if test="roleName != null">
				role_name = #{roleName,jdbcType=VARCHAR},
			</if>
			<if test="roleDesc != null">
				role_desc = #{roleDesc,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			
			<if test="updateTime != null">
				update_time = #{updateTime , jdbcType=TIMESTAMP},
			</if>
			<if test="updateUserId != null">
				update_user_id = #{updateUserId , jdbcType=BIGINT},
			</if>
			<if test="updateUserName != null">
				update_user_name = #{updateUserName , jdbcType=VARCHAR},
			</if>
			<if test="deleteFlag != null">
				delete_flag = #{deleteFlag , jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id , jdbcType=BIGINT}
	</update>
</mapper>












