#################################################
# JDBC客户端 配置文件
#################################################
jdbc_url=jdbc:mysql://bj-et-nss-rdb-common-vip.online.local:3306/matrix?useSSL=false&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=Hongkong
jdbc_username=ceroot
jdbc_password=bo280s1d3a

# 初始化时建立物理连接的个数
# druid 配置参数分析
# initialSize参数
# initialSize：初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时，默认值为0
# dubbo/api程序会在初始化时，根据连接数创建物理连接到数据库。
# 现象描述：
#       在预发布服务器和生产环境的服务器上跟踪druid数据库的连接时发现，在程序负载不高的情况下，只有1-2个物理数据库连接。但初始是设置的500？
# 现象分析：
#       重启程序发现，程序启动期间，确实启动了500个数据库的物理连接。但是很快，一分钟不到，500个数据库连接的状态就从ESTAB变为CLOSE_WAIT，之后慢慢的关闭掉。Mysql数据库会根据连接的空闲时间，主动关闭tcp连接，从而造成数据库连接状态从连接变成关闭。
# initialSize参数分析：
#       1、启动时严重影响程序的启动效率，我在预发布环境测试发现，最差的情况，小的initailSize会比当前500个配置快200多秒。启动程序时，如果数据库连接数多时，新建连接会变的很慢，从而造成程序长时间启动不起来。尤其是api的程序。
#       2、由于生产环境每个程序都设置的是500，可以推算下，加上负载，大体有50个程序要连接数据库，如果都保持的话，瞬时的同时连接数，50×500=25000
#       3、设置过高的值，不能显著提高程序的性能，而且还会延长程序启动时间，整体上对数据库系统性能造成影响。
# 结论：
#       不必设置过高的initialSize，微服务集群环境下建议设置：intialSize 5-10之间即可。
initialSize=10
#最大连接池数量
maxActive=2500
#已经不再使用，配置了也没效果
maxIdle=20
#最小连接池数量
minIdle=200
#获取连接时最大等待时间，单位毫秒，配置为30秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
maxWait=30000
#是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
poolPreparedStatements=false
#用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
validationQuery=SELECT 1 
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能|默认true
testOnBorrow=true
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
testOnReturn=false
#申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效|建议配置为true，不影响性能，并且保证安全性。
testWhileIdle=true
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 30*60*1000|testOnBorrow must be true
timeBetweenEvictionRunsMillis=1800000
#配置一个连接在池中最小生存的时间，单位是毫秒|1小时
minEvictableIdleTimeMillis=3600000
#超过时间限制是否回收
removeAbandoned=true
#超时时间；单位为秒。8*60*60
removeAbandonedTimeout=28800
#关闭abanded连接时输出错误日志
logAbandoned=true
#属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有： 监控统计用的filter:stat日志用的filter:log4j防御sql注入的filter:wall
filters=mergeStat